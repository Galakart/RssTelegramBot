version: '3.9'

services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # redis:
  #   image: redis:7-alpine
  #   restart: always
  #   volumes: 
  #     - redis_data:/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  bot:
    build: .
    image: ${IMAGE_NAME}
    restart: always
    stop_signal: SIGINT
    environment:
      - COMPOSE_PROJECT_NAME
      - GRAYLOG_HOST
      - BOT_TOKEN
      - DB_URL
      - TZ
    depends_on:
      db:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
    command: >
      bash -c "alembic upgrade head &&
      python -m bot"   

volumes:
  pg_data:
  # redis_data:
